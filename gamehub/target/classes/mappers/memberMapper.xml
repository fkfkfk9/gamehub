<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gamehub.mapper.MemberMapper">
	<!-- 회원가입 -->
	<insert id="registerMem">
	insert into tbl_member(mem_id, mem_name, mem_passwd, mem_addr_num, mem_addr_basic, 
	mem_addr_detail, mem_tel, mem_nick, mem_receive)
	values(#{mem_id},#{mem_name},#{mem_passwd},#{mem_addr_num},#{mem_addr_basic},
	#{mem_addr_detail},#{mem_tel},#{mem_nick},#{mem_receive})
	</insert>
	<!-- 아이디 중복검사 -->
	<select id="idCheck" resultType="string">
		select mem_id from tbl_member where mem_id = #{mem_id}
	</select>
	<!-- 닉네임 중복검사 -->
	<select id="nickCheck" resultType="string">
		select mem_nick from tbl_member where mem_nick = #{mem_nick}
	</select>
	<!-- 아이디 찾기 -->
	<select id="searchId" resultType="LoginDTO">
		select mem_id, mem_verify from tbl_member where mem_name = #{mem_name} and mem_tel = #{mem_tel}
	</select>
	<!-- 암호찾기 -->
	<update id="searchPw">
		update tbl_member set mem_passwd = #{mem_passwd} 
		where mem_id = #{mem_id} and mem_name = #{mem_name} and mem_tel = #{mem_tel}
	</update>
	<!-- 이메일 인증처리 -->
	<update id="verifyMember">
	update tbl_member set mem_verify = 'Y' where mem_id = #{mem_id}
	</update>
	<!-- 로그인 -->
	<select id="login" resultType="LoginDTO">
		select mem_id, mem_name, mem_level, mem_nick, mem_verify, mem_passwd from tbl_member where mem_id = #{mem_id}
	</select>
	<!-- 마지막 로그인 시간 -->
	<update id="lastlogin">
		update tbl_member set mem_lastlogin = sysdate where mem_id = #{mem_id}
	</update>
	<!-- 업데이트용 회원정보 얻어오기 -->
	<select id="updateInfo" resultType="MemberVO">
		select mem_id ,mem_name, mem_nick, mem_addr_num, mem_addr_basic, mem_addr_detail, mem_tel, mem_receive
		from tbl_member where mem_id = #{mem_id}
	</select>
	<!-- 회원정보수정 입력 정보 업데이트 -->
	<update id="update">
		<![CDATA[
		update tbl_member set mem_updatedate = sysdate, mem_name = #{mem_name}, mem_passwd = #{mem_passwd},
		mem_nick = #{mem_nick},	mem_addr_num = #{mem_addr_num}, mem_addr_basic= #{mem_addr_basic}, 
		mem_addr_detail = #{mem_addr_detail}, mem_tel = #{mem_tel}, mem_receive = #{mem_receive}
		where mem_id = #{mem_id}
		]]>
	</update>
	<!-- 삭제 : 실제로 delete를 하는게 아니라 모든 정보 update로 null처리 -->
	<update id="delete">
		<![CDATA[
		update tbl_member set mem_updatedate = sysdate, mem_name = 'null', mem_passwd = 'null',
		mem_addr_num = 'null', mem_addr_basic= 'null', mem_level = 0,
		mem_addr_detail = 'null', mem_tel = 'null', mem_receive = 'N', mem_verify = 'X', mem_point = 0
		where mem_id = #{mem_id}
		]]>
	</update>
	<!-- 데이터가 삭제처리가 되어있는지 체크한다. -->
	<select id="deleteCheck" resultType="string">
		select mem_verify from tbl_member where mem_id = #{mem_id}
	</select>
	<!-- 처음 DB에 직접 입력한 암호들을 sha256, BCrypt암호화하는 과정 -->
	<select id="adminpwse" resultType="MemberVO">
		select mem_id ,mem_passwd from tbl_member	
	</select>
	<update id="adminpwup">
		update tbl_member set mem_passwd = #{mem_passwd} where mem_id = #{mem_id}
	</update>
</mapper>